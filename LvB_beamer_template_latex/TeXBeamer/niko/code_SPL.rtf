{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18640\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 # Fitting the k - 1 orthogonal Polynomials In each cycle of the loop the coefficients are assigned to the i-th column of the object poly_coef\
    for (i in 1:maxpoly) \{\
        pfv = paste("poly_fit_", i, sep = "")\
        poly = assign(pfv, lm(rma_data_long$value ~ poly(rma_data_long$condition, degree = i, raw = TRUE)))\
        poly_coef[, i][1:(i + 1)] = poly$coef\
    \}\
\
\
# create datapoints for polynomial plot: this code automatically sets up the data that is required to plot the k-1 polynomial regression lines \
    poly_curve_data = data.frame(x = seq(1, k, length.out = 100), tcrossprod(outer(seq(1, k, length.out = 100), 0:(k - 1), `^`), do.call(rbind, poly_coef))) %>% gather(var, \
        y, -x)\
    \
\
# plot the k-1 polynomial regression lines\
    poly_plot = ggplot(data = rma_data_long, aes(x = condition, y = value)) + geom_point() + labs(col = "Order of \\npolynomial", x = "Condition", y = "Value", title = "Orthogonal polynomial contrasts") + \
        geom_path(data = poly_curve_data, aes(x, y, color = var), lwd = 1.2) + scale_color_discrete(labels = as.character(1:(k - 1)))\
    }